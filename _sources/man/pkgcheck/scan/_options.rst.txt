Positional Arguments
--------------------

:TARGET:  
        optional target atom(s)

Reporter Options
----------------

-R REPORTER, --reporter REPORTER  
                                  Select a reporter to use for output.
                                  
                                  Use ``pkgcheck show --reporters`` to see available options.

--format FORMAT_STR               
                                  Custom format string used to format output by FormatReporter.
                                  
                                  Supports python format string syntax where result object attribute names
                                  surrounded by curly braces are replaced with their values (if they exist).
                                  
                                  For example, ``--format '{category}/{package}/{package}-{version}.ebuild``
                                  will output ebuild paths in the target repo for results relating to
                                  specific ebuild versions. If a result is for the generic package (or a
                                  higher scope), no output will be produced for that result.
                                  
                                  Furthermore, no output will be produced if a result object is missing any
                                  requested attribute expansion in the format string. In other words,
                                  ``--format {foo}`` will never produce any output because no result has the
                                  ``foo`` attribute.

Base Options
------------

-h, --help       
                 Show this help message and exit. To get more
                 information see the related man page.

--debug          
                 Enable debug checks and show verbose debug output.

-q, --quiet      
                 Suppress non-error, informational messages.

-v, --verbose    
                 Increase the verbosity of various output.

--color BOOLEAN  
                 Toggle colored output support. This can be used to forcibly
                 enable color support when piping output or other sitations
                 where stdout is not a tty.

Main Options
------------

--config CONFIG_FILE                      
                                          config file to load scan settings from

-r REPO, --repo REPO                      
                                          repo to pull packages from

-f {latest,repo}, --filter {latest,repo}  
                                          Support limiting targeted packages for scanning using a chosen filter.
                                          
                                          If the 'repo' argument is used, all package visibility mechanisms used
                                          by the package manager when resolving package dependencies such as
                                          ACCEPT_KEYWORDS, ACCEPT_LICENSE, and package.mask will be enabled.
                                          
                                          If the 'latest' argument is used, only the latest package per slot of
                                          both VCS and non-VCS types will be scanned.

--sorted                                  
                                          Globally sort all generated results. Note that this is only useful for
                                          limited runs (e.g. using -k to restrict output to a single result type)
                                          since it causes all generated results to be stored in memory and sorts
                                          on a global scope.

-j JOBS, --jobs JOBS                      
                                          Number of checks to run in parallel, defaults to using all available
                                          processors.

-t TASKS, --tasks TASKS                   
                                          Number of asynchronous tasks to run concurrently (defaults to 5 * CPU count).

--cache CACHE                             
                                          All cache types are enabled by default, this option explicitly sets
                                          which caches will be generated and used during scanning.
                                          
                                          To enable only certain cache types, specify them in a comma-separated
                                          list, e.g. ``--cache git,profiles`` will enable both the git and
                                          profiles caches.
                                          
                                          To disable specific cache types prefix them with ``-``. Note
                                          that when starting the argument list with a disabled value an equals
                                          sign must be used, e.g. ``--cache=-git``, otherwise the disabled
                                          argument is treated as an option.
                                          
                                          In order to disable all cache usage, it's easiest to use ``--cache no``
                                          instead of explicitly listing all disabled cache types.
                                          
                                          When disabled, no caches will be saved to disk and results requiring
                                          caches (e.g. git-related checks) will be skipped.

Check Selection
---------------

-c CHECK, --checks CHECK        
                                Comma separated list of checks to enable and disable for
                                scanning. Any checks specified in this fashion will be the
                                only checks that get run, skipping any disabled checks.
                                
                                To specify disabled checks prefix them with ``-``. Note that when
                                starting the argument list with a disabled check an equals sign must
                                be used, e.g. ``-c=-check``, otherwise the disabled check argument is
                                treated as an option.
                                
                                The special argument of ``all`` corresponds to the list of all checks.
                                Therefore, to forcibly enable all checks use ``-c all``.
                                
                                In addition, all network-related checks (which are disabled by default)
                                can be enabled using ``-c net``. This allows for easily running only
                                network checks without having to explicitly list them.
                                
                                Use ``pkgcheck show --checks`` see available options.

-k KEYWORD, --keywords KEYWORD  
                                Comma separated list of keywords to enable and disable for
                                scanning. Any keywords specified in this fashion will be the
                                only keywords that get reported, skipping any disabled keywords.
                                
                                To specify disabled keywords prefix them with ``-``. Note that when
                                starting the argument list with a disabled keyword an equals sign must
                                be used, e.g. ``-k=-keyword``, otherwise the disabled keyword argument is
                                treated as an option.
                                
                                The special arguments of ``error``, ``warning``, and ``info``
                                correspond to the lists of error, warning, and info keywords,
                                respectively. For example, to only scan for errors use ``-k error``.
                                
                                Use ``pkgcheck show --keywords`` to see available options.

-s SCOPE, --scopes SCOPE        
                                Comma separated list of scopes to enable and disable for scanning. Any
                                scopes specified in this fashion will affect the keywords that get
                                reported. For example, running pkgcheck with only the repo scope
                                enabled will cause only repo-level keywords to be scanned for and
                                reported.
                                
                                To specify disabled scopes prefix them with ``-`` similar to the
                                -k/--keywords option.
                                
                                Available scopes: git, profiles, eclass, repo, cat, pkg, ver

--net                           
                                run checks that require internet access

Plugin Options
--------------

--glsa-dir GLSA_LOCATION  
                          source directory for glsas; tries to autodetermine it, may be required if no glsa dirs are known

--source-arches ARCH      
                          Comma separated list of arches to compare against for
                          lagging stabilization.
                          
                          The default arches are all stable arches (unless --arches is specified).

Network
-------

--timeout TIMEOUT        
                         timeout used for network checks

--user-agent USER_AGENT  
                         custom user agent spoofing

Git
---

Git repo support for various checks.

Pkgcheck can create virtual package repos from a given git repo's history
in order to provide more info for checks relating to stable requests,
outdated blockers, or local commits. These virtual repos are cached and
updated every run if new commits are detected.

Git repos must have a supported config in order to work properly.
Specifically, pkgcheck assumes that both origin and master branches exist
and relate to the upstream and local development states, respectively.

Additionally, the origin/HEAD ref must exist. If it doesn't, running ``git
fetch origin`` should create it. Otherwise, using ``git remote set-head
origin master`` or similar will also create the reference.

--commits [COMMIT]  
                    For a local git repo, pkgcheck will determine targets to scan
                    from the committed changes compared to a given reference that
                    defaults to the repo's origin.
                    
                    For example, to scan all the packages that have been changed in
                    the current branch compared to the branch named 'old' use
                    ``pkgcheck scan --commits old``. For two separate branches
                    named 'old' and 'new' use ``pkgcheck scan --commits old..new``.
                    
                    Note that will also enable eclass-specific checks if it
                    determines any commits have been made to eclasses.

Profiles
--------

-p PROFILE, --profiles PROFILE  
                                Comma separated list of profiles to enable and disable for
                                scanning. Any profiles specified in this fashion will be the
                                only profiles that get scanned, skipping any disabled profiles.
                                In addition, if no profiles are explicitly enabled, all
                                profiles defined in the target repo's profiles.desc file will be
                                scanned except those marked as experimental (exp).
                                
                                To specify disabled profiles prefix them with ``-`` which
                                removes the from the list of profiles to be considered. Note
                                that when starting the argument list with a disabled profile an
                                equals sign must be used, e.g.  ``-p=-path/to/profile``,
                                otherwise the disabled profile argument is treated as an
                                option.
                                
                                The special keywords of ``stable``, ``dev``, ``exp``, and
                                ``deprecated`` correspond to the lists of stable, development,
                                experimental, and deprecated profiles, respectively. Therefore,
                                to only scan all stable profiles pass the ``stable`` argument
                                to --profiles. Additionally the keyword ``all`` can be used to
                                scan all defined profiles in the target repo.

Arches
------

-a ARCH, --arches ARCH  
                        Comma separated list of arches to enable and disable.
                        
                        To specify disabled arches prefix them with '-'. Note that when
                        starting the argument list with a disabled arch an equals sign
                        must be used, e.g. -a=-arch, otherwise the disabled arch
                        argument is treated as an option.
                        
                        By default all repo defined arches are used; however,
                        stable-related checks (e.g. UnstableOnly) default to the set of
                        arches having stable profiles in the target repo.

Query Caching
-------------

--reset-caching-per {version,package,category}  
                                                control how often the cache is cleared (version, package or category)
